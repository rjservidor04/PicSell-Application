// Generated by view binder compiler. Do not edit!
package com.example.picsellapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TableLayout;
import android.widget.TableRow;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.picsellapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class InventoryTableLayoutBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TableLayout tblInventoryData;

  @NonNull
  public final TableRow trRowData;

  @NonNull
  public final TextView tvInventoryItem;

  @NonNull
  public final TextView tvInventoryQuantity;

  @NonNull
  public final TextView tvMore;

  private InventoryTableLayoutBinding(@NonNull ScrollView rootView,
      @NonNull TableLayout tblInventoryData, @NonNull TableRow trRowData,
      @NonNull TextView tvInventoryItem, @NonNull TextView tvInventoryQuantity,
      @NonNull TextView tvMore) {
    this.rootView = rootView;
    this.tblInventoryData = tblInventoryData;
    this.trRowData = trRowData;
    this.tvInventoryItem = tvInventoryItem;
    this.tvInventoryQuantity = tvInventoryQuantity;
    this.tvMore = tvMore;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static InventoryTableLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static InventoryTableLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.inventory_table_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static InventoryTableLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tbl_inventory_data;
      TableLayout tblInventoryData = ViewBindings.findChildViewById(rootView, id);
      if (tblInventoryData == null) {
        break missingId;
      }

      id = R.id.trRowData;
      TableRow trRowData = ViewBindings.findChildViewById(rootView, id);
      if (trRowData == null) {
        break missingId;
      }

      id = R.id.tvInventoryItem;
      TextView tvInventoryItem = ViewBindings.findChildViewById(rootView, id);
      if (tvInventoryItem == null) {
        break missingId;
      }

      id = R.id.tvInventoryQuantity;
      TextView tvInventoryQuantity = ViewBindings.findChildViewById(rootView, id);
      if (tvInventoryQuantity == null) {
        break missingId;
      }

      id = R.id.tvMore;
      TextView tvMore = ViewBindings.findChildViewById(rootView, id);
      if (tvMore == null) {
        break missingId;
      }

      return new InventoryTableLayoutBinding((ScrollView) rootView, tblInventoryData, trRowData,
          tvInventoryItem, tvInventoryQuantity, tvMore);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
