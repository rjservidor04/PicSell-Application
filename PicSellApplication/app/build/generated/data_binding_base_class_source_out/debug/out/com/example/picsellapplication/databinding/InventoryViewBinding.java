// Generated by view binder compiler. Do not edit!
package com.example.picsellapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.picsellapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class InventoryViewBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnAddItem;

  @NonNull
  public final Button btnHome;

  @NonNull
  public final Button btnRemoveItem;

  @NonNull
  public final Button btnUpdateItem;

  @NonNull
  public final Button button;

  @NonNull
  public final Button button2;

  @NonNull
  public final Button button3;

  @NonNull
  public final RecyclerView idRVInventory;

  @NonNull
  public final RecyclerView idRVInventory2;

  @NonNull
  public final RecyclerView idRVInventory3;

  @NonNull
  public final RelativeLayout inventoryView;

  @NonNull
  public final TextView tvLogoName5;

  private InventoryViewBinding(@NonNull RelativeLayout rootView, @NonNull Button btnAddItem,
      @NonNull Button btnHome, @NonNull Button btnRemoveItem, @NonNull Button btnUpdateItem,
      @NonNull Button button, @NonNull Button button2, @NonNull Button button3,
      @NonNull RecyclerView idRVInventory, @NonNull RecyclerView idRVInventory2,
      @NonNull RecyclerView idRVInventory3, @NonNull RelativeLayout inventoryView,
      @NonNull TextView tvLogoName5) {
    this.rootView = rootView;
    this.btnAddItem = btnAddItem;
    this.btnHome = btnHome;
    this.btnRemoveItem = btnRemoveItem;
    this.btnUpdateItem = btnUpdateItem;
    this.button = button;
    this.button2 = button2;
    this.button3 = button3;
    this.idRVInventory = idRVInventory;
    this.idRVInventory2 = idRVInventory2;
    this.idRVInventory3 = idRVInventory3;
    this.inventoryView = inventoryView;
    this.tvLogoName5 = tvLogoName5;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static InventoryViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static InventoryViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.inventory_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static InventoryViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddItem;
      Button btnAddItem = ViewBindings.findChildViewById(rootView, id);
      if (btnAddItem == null) {
        break missingId;
      }

      id = R.id.btnHome;
      Button btnHome = ViewBindings.findChildViewById(rootView, id);
      if (btnHome == null) {
        break missingId;
      }

      id = R.id.btnRemoveItem;
      Button btnRemoveItem = ViewBindings.findChildViewById(rootView, id);
      if (btnRemoveItem == null) {
        break missingId;
      }

      id = R.id.btnUpdateItem;
      Button btnUpdateItem = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdateItem == null) {
        break missingId;
      }

      id = R.id.button;
      Button button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.button2;
      Button button2 = ViewBindings.findChildViewById(rootView, id);
      if (button2 == null) {
        break missingId;
      }

      id = R.id.button3;
      Button button3 = ViewBindings.findChildViewById(rootView, id);
      if (button3 == null) {
        break missingId;
      }

      id = R.id.idRVInventory;
      RecyclerView idRVInventory = ViewBindings.findChildViewById(rootView, id);
      if (idRVInventory == null) {
        break missingId;
      }

      id = R.id.idRVInventory2;
      RecyclerView idRVInventory2 = ViewBindings.findChildViewById(rootView, id);
      if (idRVInventory2 == null) {
        break missingId;
      }

      id = R.id.idRVInventory3;
      RecyclerView idRVInventory3 = ViewBindings.findChildViewById(rootView, id);
      if (idRVInventory3 == null) {
        break missingId;
      }

      RelativeLayout inventoryView = (RelativeLayout) rootView;

      id = R.id.tvLogoName5;
      TextView tvLogoName5 = ViewBindings.findChildViewById(rootView, id);
      if (tvLogoName5 == null) {
        break missingId;
      }

      return new InventoryViewBinding((RelativeLayout) rootView, btnAddItem, btnHome, btnRemoveItem,
          btnUpdateItem, button, button2, button3, idRVInventory, idRVInventory2, idRVInventory3,
          inventoryView, tvLogoName5);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
