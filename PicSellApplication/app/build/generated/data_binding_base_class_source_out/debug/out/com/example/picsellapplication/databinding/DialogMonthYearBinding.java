// Generated by view binder compiler. Do not edit!
package com.example.picsellapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.NumberPicker;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.picsellapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogMonthYearBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final NumberPicker datePickerMonth;

  @NonNull
  public final NumberPicker datePickerYear;

  @NonNull
  public final TextView tvHeader;

  @NonNull
  public final TextView tvTitle;

  private DialogMonthYearBinding(@NonNull ConstraintLayout rootView,
      @NonNull NumberPicker datePickerMonth, @NonNull NumberPicker datePickerYear,
      @NonNull TextView tvHeader, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.datePickerMonth = datePickerMonth;
    this.datePickerYear = datePickerYear;
    this.tvHeader = tvHeader;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogMonthYearBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogMonthYearBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_month_year_, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogMonthYearBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.datePicker_month;
      NumberPicker datePickerMonth = ViewBindings.findChildViewById(rootView, id);
      if (datePickerMonth == null) {
        break missingId;
      }

      id = R.id.datePicker_year;
      NumberPicker datePickerYear = ViewBindings.findChildViewById(rootView, id);
      if (datePickerYear == null) {
        break missingId;
      }

      id = R.id.tvHeader;
      TextView tvHeader = ViewBindings.findChildViewById(rootView, id);
      if (tvHeader == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new DialogMonthYearBinding((ConstraintLayout) rootView, datePickerMonth,
          datePickerYear, tvHeader, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
