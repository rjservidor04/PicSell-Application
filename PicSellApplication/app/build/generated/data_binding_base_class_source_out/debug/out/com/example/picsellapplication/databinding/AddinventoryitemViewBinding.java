// Generated by view binder compiler. Do not edit!
package com.example.picsellapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.picsellapplication.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddinventoryitemViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout addinventoryitemView;

  @NonNull
  public final AutoCompleteTextView autoCompleteTextView;

  @NonNull
  public final Button btnAdd;

  @NonNull
  public final TextInputEditText etItemName;

  @NonNull
  public final TextInputEditText etMinimum;

  @NonNull
  public final TextInputEditText etPrice;

  @NonNull
  public final TextInputEditText etStocks;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final TextInputLayout textInputLayout;

  @NonNull
  public final TextInputLayout textInputLayout2;

  @NonNull
  public final TextInputLayout textInputLayout3;

  @NonNull
  public final TextInputLayout textInputLayout4;

  @NonNull
  public final TextInputLayout textInputLayout7;

  @NonNull
  public final TextView tvLogoName2;

  private AddinventoryitemViewBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout addinventoryitemView,
      @NonNull AutoCompleteTextView autoCompleteTextView, @NonNull Button btnAdd,
      @NonNull TextInputEditText etItemName, @NonNull TextInputEditText etMinimum,
      @NonNull TextInputEditText etPrice, @NonNull TextInputEditText etStocks,
      @NonNull ImageView imageView2, @NonNull TextInputLayout textInputLayout,
      @NonNull TextInputLayout textInputLayout2, @NonNull TextInputLayout textInputLayout3,
      @NonNull TextInputLayout textInputLayout4, @NonNull TextInputLayout textInputLayout7,
      @NonNull TextView tvLogoName2) {
    this.rootView = rootView;
    this.addinventoryitemView = addinventoryitemView;
    this.autoCompleteTextView = autoCompleteTextView;
    this.btnAdd = btnAdd;
    this.etItemName = etItemName;
    this.etMinimum = etMinimum;
    this.etPrice = etPrice;
    this.etStocks = etStocks;
    this.imageView2 = imageView2;
    this.textInputLayout = textInputLayout;
    this.textInputLayout2 = textInputLayout2;
    this.textInputLayout3 = textInputLayout3;
    this.textInputLayout4 = textInputLayout4;
    this.textInputLayout7 = textInputLayout7;
    this.tvLogoName2 = tvLogoName2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddinventoryitemViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddinventoryitemViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.addinventoryitem_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddinventoryitemViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout addinventoryitemView = (ConstraintLayout) rootView;

      id = R.id.autoCompleteTextView;
      AutoCompleteTextView autoCompleteTextView = ViewBindings.findChildViewById(rootView, id);
      if (autoCompleteTextView == null) {
        break missingId;
      }

      id = R.id.btnAdd;
      Button btnAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnAdd == null) {
        break missingId;
      }

      id = R.id.etItemName;
      TextInputEditText etItemName = ViewBindings.findChildViewById(rootView, id);
      if (etItemName == null) {
        break missingId;
      }

      id = R.id.etMinimum;
      TextInputEditText etMinimum = ViewBindings.findChildViewById(rootView, id);
      if (etMinimum == null) {
        break missingId;
      }

      id = R.id.etPrice;
      TextInputEditText etPrice = ViewBindings.findChildViewById(rootView, id);
      if (etPrice == null) {
        break missingId;
      }

      id = R.id.etStocks;
      TextInputEditText etStocks = ViewBindings.findChildViewById(rootView, id);
      if (etStocks == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.textInputLayout;
      TextInputLayout textInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout == null) {
        break missingId;
      }

      id = R.id.textInputLayout2;
      TextInputLayout textInputLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout2 == null) {
        break missingId;
      }

      id = R.id.textInputLayout3;
      TextInputLayout textInputLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout3 == null) {
        break missingId;
      }

      id = R.id.textInputLayout4;
      TextInputLayout textInputLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout4 == null) {
        break missingId;
      }

      id = R.id.textInputLayout7;
      TextInputLayout textInputLayout7 = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout7 == null) {
        break missingId;
      }

      id = R.id.tvLogoName2;
      TextView tvLogoName2 = ViewBindings.findChildViewById(rootView, id);
      if (tvLogoName2 == null) {
        break missingId;
      }

      return new AddinventoryitemViewBinding((ConstraintLayout) rootView, addinventoryitemView,
          autoCompleteTextView, btnAdd, etItemName, etMinimum, etPrice, etStocks, imageView2,
          textInputLayout, textInputLayout2, textInputLayout3, textInputLayout4, textInputLayout7,
          tvLogoName2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
