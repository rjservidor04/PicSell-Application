// Generated by view binder compiler. Do not edit!
package com.example.picsellapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.picsellapplication.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddinventoryitemViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout addinventoryitemView;

  @NonNull
  public final Button btnAdd;

  @NonNull
  public final TextInputEditText etCost;

  @NonNull
  public final TextInputEditText etItemName;

  @NonNull
  public final TextInputEditText etMinimum;

  @NonNull
  public final TextInputEditText etPrice;

  @NonNull
  public final TextInputEditText etStocks;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final TextInputLayout layoutCost;

  @NonNull
  public final TextInputLayout layoutItem;

  @NonNull
  public final TextInputLayout layoutMin;

  @NonNull
  public final TextInputLayout layoutPrice;

  @NonNull
  public final TextInputLayout layoutStock;

  @NonNull
  public final TextView tvBack;

  @NonNull
  public final TextView tvLogoName2;

  private AddinventoryitemViewBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout addinventoryitemView, @NonNull Button btnAdd,
      @NonNull TextInputEditText etCost, @NonNull TextInputEditText etItemName,
      @NonNull TextInputEditText etMinimum, @NonNull TextInputEditText etPrice,
      @NonNull TextInputEditText etStocks, @NonNull ImageView imageView2,
      @NonNull TextInputLayout layoutCost, @NonNull TextInputLayout layoutItem,
      @NonNull TextInputLayout layoutMin, @NonNull TextInputLayout layoutPrice,
      @NonNull TextInputLayout layoutStock, @NonNull TextView tvBack,
      @NonNull TextView tvLogoName2) {
    this.rootView = rootView;
    this.addinventoryitemView = addinventoryitemView;
    this.btnAdd = btnAdd;
    this.etCost = etCost;
    this.etItemName = etItemName;
    this.etMinimum = etMinimum;
    this.etPrice = etPrice;
    this.etStocks = etStocks;
    this.imageView2 = imageView2;
    this.layoutCost = layoutCost;
    this.layoutItem = layoutItem;
    this.layoutMin = layoutMin;
    this.layoutPrice = layoutPrice;
    this.layoutStock = layoutStock;
    this.tvBack = tvBack;
    this.tvLogoName2 = tvLogoName2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddinventoryitemViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddinventoryitemViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.addinventoryitem_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddinventoryitemViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout addinventoryitemView = (ConstraintLayout) rootView;

      id = R.id.btnAdd;
      Button btnAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnAdd == null) {
        break missingId;
      }

      id = R.id.etCost;
      TextInputEditText etCost = ViewBindings.findChildViewById(rootView, id);
      if (etCost == null) {
        break missingId;
      }

      id = R.id.etItemName;
      TextInputEditText etItemName = ViewBindings.findChildViewById(rootView, id);
      if (etItemName == null) {
        break missingId;
      }

      id = R.id.etMinimum;
      TextInputEditText etMinimum = ViewBindings.findChildViewById(rootView, id);
      if (etMinimum == null) {
        break missingId;
      }

      id = R.id.etPrice;
      TextInputEditText etPrice = ViewBindings.findChildViewById(rootView, id);
      if (etPrice == null) {
        break missingId;
      }

      id = R.id.etStocks;
      TextInputEditText etStocks = ViewBindings.findChildViewById(rootView, id);
      if (etStocks == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.layoutCost;
      TextInputLayout layoutCost = ViewBindings.findChildViewById(rootView, id);
      if (layoutCost == null) {
        break missingId;
      }

      id = R.id.layoutItem;
      TextInputLayout layoutItem = ViewBindings.findChildViewById(rootView, id);
      if (layoutItem == null) {
        break missingId;
      }

      id = R.id.layoutMin;
      TextInputLayout layoutMin = ViewBindings.findChildViewById(rootView, id);
      if (layoutMin == null) {
        break missingId;
      }

      id = R.id.layoutPrice;
      TextInputLayout layoutPrice = ViewBindings.findChildViewById(rootView, id);
      if (layoutPrice == null) {
        break missingId;
      }

      id = R.id.layoutStock;
      TextInputLayout layoutStock = ViewBindings.findChildViewById(rootView, id);
      if (layoutStock == null) {
        break missingId;
      }

      id = R.id.tvBack;
      TextView tvBack = ViewBindings.findChildViewById(rootView, id);
      if (tvBack == null) {
        break missingId;
      }

      id = R.id.tvLogoName2;
      TextView tvLogoName2 = ViewBindings.findChildViewById(rootView, id);
      if (tvLogoName2 == null) {
        break missingId;
      }

      return new AddinventoryitemViewBinding((ConstraintLayout) rootView, addinventoryitemView,
          btnAdd, etCost, etItemName, etMinimum, etPrice, etStocks, imageView2, layoutCost,
          layoutItem, layoutMin, layoutPrice, layoutStock, tvBack, tvLogoName2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
