// Generated by view binder compiler. Do not edit!
package com.example.picsellapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.picsellapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RemoveinventoryitemViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnRemove;

  @NonNull
  public final Button btnSelectItem;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final ImageView removeImageView;

  @NonNull
  public final TextView tvLogoName3;

  @NonNull
  public final TextView tvProductName;

  private RemoveinventoryitemViewBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnRemove, @NonNull Button btnSelectItem, @NonNull ImageView imageView3,
      @NonNull ImageView removeImageView, @NonNull TextView tvLogoName3,
      @NonNull TextView tvProductName) {
    this.rootView = rootView;
    this.btnRemove = btnRemove;
    this.btnSelectItem = btnSelectItem;
    this.imageView3 = imageView3;
    this.removeImageView = removeImageView;
    this.tvLogoName3 = tvLogoName3;
    this.tvProductName = tvProductName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RemoveinventoryitemViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RemoveinventoryitemViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.removeinventoryitem_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RemoveinventoryitemViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnRemove;
      Button btnRemove = ViewBindings.findChildViewById(rootView, id);
      if (btnRemove == null) {
        break missingId;
      }

      id = R.id.btnSelectItem;
      Button btnSelectItem = ViewBindings.findChildViewById(rootView, id);
      if (btnSelectItem == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.removeImageView;
      ImageView removeImageView = ViewBindings.findChildViewById(rootView, id);
      if (removeImageView == null) {
        break missingId;
      }

      id = R.id.tvLogoName3;
      TextView tvLogoName3 = ViewBindings.findChildViewById(rootView, id);
      if (tvLogoName3 == null) {
        break missingId;
      }

      id = R.id.tvProductName;
      TextView tvProductName = ViewBindings.findChildViewById(rootView, id);
      if (tvProductName == null) {
        break missingId;
      }

      return new RemoveinventoryitemViewBinding((ConstraintLayout) rootView, btnRemove,
          btnSelectItem, imageView3, removeImageView, tvLogoName3, tvProductName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
