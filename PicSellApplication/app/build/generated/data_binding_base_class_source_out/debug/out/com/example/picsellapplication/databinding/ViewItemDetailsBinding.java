// Generated by view binder compiler. Do not edit!
package com.example.picsellapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.picsellapplication.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewItemDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnDelete;

  @NonNull
  public final Button btnUpdate;

  @NonNull
  public final TextInputEditText etCostDetails;

  @NonNull
  public final TextInputEditText etItemNameDetails;

  @NonNull
  public final TextInputEditText etMinimumDetails;

  @NonNull
  public final TextInputEditText etPriceDetails;

  @NonNull
  public final TextInputEditText etStocksDetails;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final TextInputLayout layoutCost;

  @NonNull
  public final TextInputLayout layoutItem;

  @NonNull
  public final TextInputLayout layoutMin;

  @NonNull
  public final TextInputLayout layoutPrice;

  @NonNull
  public final TextInputLayout layoutStock;

  @NonNull
  public final TextView tvBack;

  @NonNull
  public final TextView tvLogoName2;

  private ViewItemDetailsBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnDelete,
      @NonNull Button btnUpdate, @NonNull TextInputEditText etCostDetails,
      @NonNull TextInputEditText etItemNameDetails, @NonNull TextInputEditText etMinimumDetails,
      @NonNull TextInputEditText etPriceDetails, @NonNull TextInputEditText etStocksDetails,
      @NonNull ImageView imageView2, @NonNull TextInputLayout layoutCost,
      @NonNull TextInputLayout layoutItem, @NonNull TextInputLayout layoutMin,
      @NonNull TextInputLayout layoutPrice, @NonNull TextInputLayout layoutStock,
      @NonNull TextView tvBack, @NonNull TextView tvLogoName2) {
    this.rootView = rootView;
    this.btnDelete = btnDelete;
    this.btnUpdate = btnUpdate;
    this.etCostDetails = etCostDetails;
    this.etItemNameDetails = etItemNameDetails;
    this.etMinimumDetails = etMinimumDetails;
    this.etPriceDetails = etPriceDetails;
    this.etStocksDetails = etStocksDetails;
    this.imageView2 = imageView2;
    this.layoutCost = layoutCost;
    this.layoutItem = layoutItem;
    this.layoutMin = layoutMin;
    this.layoutPrice = layoutPrice;
    this.layoutStock = layoutStock;
    this.tvBack = tvBack;
    this.tvLogoName2 = tvLogoName2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewItemDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewItemDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_item_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewItemDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDelete;
      Button btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btnUpdate;
      Button btnUpdate = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdate == null) {
        break missingId;
      }

      id = R.id.etCost_Details;
      TextInputEditText etCostDetails = ViewBindings.findChildViewById(rootView, id);
      if (etCostDetails == null) {
        break missingId;
      }

      id = R.id.etItemName_Details;
      TextInputEditText etItemNameDetails = ViewBindings.findChildViewById(rootView, id);
      if (etItemNameDetails == null) {
        break missingId;
      }

      id = R.id.etMinimum_Details;
      TextInputEditText etMinimumDetails = ViewBindings.findChildViewById(rootView, id);
      if (etMinimumDetails == null) {
        break missingId;
      }

      id = R.id.etPrice_Details;
      TextInputEditText etPriceDetails = ViewBindings.findChildViewById(rootView, id);
      if (etPriceDetails == null) {
        break missingId;
      }

      id = R.id.etStocks_Details;
      TextInputEditText etStocksDetails = ViewBindings.findChildViewById(rootView, id);
      if (etStocksDetails == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.layoutCost;
      TextInputLayout layoutCost = ViewBindings.findChildViewById(rootView, id);
      if (layoutCost == null) {
        break missingId;
      }

      id = R.id.layoutItem;
      TextInputLayout layoutItem = ViewBindings.findChildViewById(rootView, id);
      if (layoutItem == null) {
        break missingId;
      }

      id = R.id.layoutMin;
      TextInputLayout layoutMin = ViewBindings.findChildViewById(rootView, id);
      if (layoutMin == null) {
        break missingId;
      }

      id = R.id.layoutPrice;
      TextInputLayout layoutPrice = ViewBindings.findChildViewById(rootView, id);
      if (layoutPrice == null) {
        break missingId;
      }

      id = R.id.layoutStock;
      TextInputLayout layoutStock = ViewBindings.findChildViewById(rootView, id);
      if (layoutStock == null) {
        break missingId;
      }

      id = R.id.tvBack;
      TextView tvBack = ViewBindings.findChildViewById(rootView, id);
      if (tvBack == null) {
        break missingId;
      }

      id = R.id.tvLogoName2;
      TextView tvLogoName2 = ViewBindings.findChildViewById(rootView, id);
      if (tvLogoName2 == null) {
        break missingId;
      }

      return new ViewItemDetailsBinding((ConstraintLayout) rootView, btnDelete, btnUpdate,
          etCostDetails, etItemNameDetails, etMinimumDetails, etPriceDetails, etStocksDetails,
          imageView2, layoutCost, layoutItem, layoutMin, layoutPrice, layoutStock, tvBack,
          tvLogoName2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
